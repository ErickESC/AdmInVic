/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.uam.ayd.proyecto.presentacion;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import mx.uam.ayd.proyecto.negocio.dominio.Articulo;

/**
 * Vista para registrar una venta
 * @author Vicente Santiago
 */
public class VentanaVenta extends javax.swing.JFrame {
	private static final long serialVersionUID = 1L;

	private JButton agregarArticulo;
    private JButton calculaTotal;
    private JButton eliminaSeleccion;
    private JButton cancelarVenta;
    private JTextField idArticuloSeleccionado;
    private JLabel idProductoLabel;
    private JScrollPane jScrollPane1;
    private JTable listaDeArticulos;
    private JButton registrarVenta;
    private JLabel totalAPagar;
	private JLabel totalLabel;
	
	private List<Map<String,Integer>> listaDeIds;

	private DefaultTableModel tabla;
	
	private ControlVenta control;
	
    /**
     * Creates new form Venta
     */
    public VentanaVenta(ControlVenta ctrl) {
		control = ctrl;
		agregarArticulo = null;
		calculaTotal = null;
		eliminaSeleccion = null;
		cancelarVenta = null;
		idArticuloSeleccionado = null;
		idProductoLabel = null;
		jScrollPane1 = null;
		listaDeArticulos = null;
		registrarVenta = null;
		totalAPagar = null;
		totalLabel = null;
        initComponents();
        tabla = new DefaultTableModel(new Object[0][0], new String [] {"Id", "Descripci√≥n", "Cantidad", "Precio" });
		listaDeArticulos.setModel(tabla);
		listaDeIds = new ArrayList<Map<String,Integer>>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        idProductoLabel = new javax.swing.JLabel();
        idArticuloSeleccionado = new javax.swing.JTextField();
        agregarArticulo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDeArticulos = new javax.swing.JTable();
        totalLabel = new javax.swing.JLabel();
        totalAPagar = new javax.swing.JLabel();
        cancelarVenta = new javax.swing.JButton();
        registrarVenta = new javax.swing.JButton();
        calculaTotal = new javax.swing.JButton();
        eliminaSeleccion = new javax.swing.JButton();

        setTitle("Venta");

        idProductoLabel.setText("Id del Articulo:");

        agregarArticulo.setText("Agregar");
        agregarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarArticuloActionPerformed(evt);
            }
        });
        listaDeArticulos.setDragEnabled(true);
        jScrollPane1.setViewportView(listaDeArticulos);
        if (listaDeArticulos.getColumnModel().getColumnCount() > 0) {
            listaDeArticulos.getColumnModel().getColumn(0).setResizable(false);
            listaDeArticulos.getColumnModel().getColumn(1).setResizable(false);
            listaDeArticulos.getColumnModel().getColumn(2).setResizable(false);
            listaDeArticulos.getColumnModel().getColumn(3).setResizable(false);
        }

        totalLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalLabel.setText("Total: $");

        totalAPagar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalAPagar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalAPagar.setText("0.0");

        cancelarVenta.setText("Cancelar");
        cancelarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarVentaActionPerformed(evt);
            }
        });

        registrarVenta.setText("Registrar Venta");
        registrarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarVentaActionPerformed(evt);
            }
        });

        calculaTotal.setText("Calcula Total");
        calculaTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculaTotalActionPerformed(evt);
            }
        });

		eliminaSeleccion.setBounds(10, 15, 18, 25);
        eliminaSeleccion.setText("Eliminar");
        eliminaSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminaArticuloDeLista(evt);
            }
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(idProductoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(idArticuloSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(agregarArticulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cancelarVenta)
                                .addGap(18, 18, 18)
                                .addComponent(registrarVenta))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(eliminaSeleccion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calculaTotal)
                                .addGap(18, 18, 18)
                                .addComponent(totalLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idProductoLabel)
                    .addComponent(idArticuloSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregarArticulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalLabel)
                        .addComponent(totalAPagar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(calculaTotal)
                        .addComponent(eliminaSeleccion)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registrarVenta)
                    .addComponent(cancelarVenta))
                .addContainerGap(21, Short.MAX_VALUE))
        );
		
        pack();
    }// </editor-fold>                        

    private void agregarArticuloActionPerformed(java.awt.event.ActionEvent evt) {                                                
		System.out.println("Agregando Producto");
		boolean agregar = true;
		Articulo a = control.buscaArticulo(idArticuloSeleccionado.getText());
		for (int i = 0; i <  tabla.getRowCount(); i++) {
			String id = tabla.getValueAt(i, 0).toString();
			if(id.equals(idArticuloSeleccionado.getText())){
				agregar = false;
				int cantidad = Integer.parseInt(tabla.getValueAt(i, 2).toString()) +1;
				tabla.setValueAt(cantidad, i, 2);
				break;
			}
		}
		if(a != null && agregar) {
			Object[] articuloVenta = new Object[4];
			articuloVenta[0] = a.getIdArticulo();
			articuloVenta[1] = a.getDescripcion();
			articuloVenta[2] = 1;
			articuloVenta[3] = a.getPrecioVenta();
			agregarArticuloALista(articuloVenta);
			
		} else {
			if(agregar){
				JOptionPane.showMessageDialog(this, "No hay ningun articulo registrado con el id: "+idArticuloSeleccionado.getText());
			}
		}
		idArticuloSeleccionado.setText("");
    }                                               

    private void cancelarVentaActionPerformed(java.awt.event.ActionEvent evt) {                                              
        setVisible(false);
    }                                             

    private void registrarVentaActionPerformed(java.awt.event.ActionEvent evt) {
		if(tabla.getRowCount() > 0) {
			totalAPagar.setText(calculaTotalAPagar());
			int respuesta = JOptionPane.showConfirmDialog(this, "Por favor confirma la Venta por: \n$"+totalAPagar.getText(),"Registrar Venta",JOptionPane.YES_NO_OPTION);
			if (respuesta == JOptionPane.YES_OPTION) {
				List<String> listaInsuficientes = control.registarVenta(listaDeIds);
				boolean aprobar = listaInsuficientes.size() == 0;
				if(aprobar){
					System.out.println("La lista es valida :) "+listaInsuficientes.size());
					JOptionPane.showMessageDialog(this, "Se ha registrado la Venta de los articulos por: \n$"+totalAPagar.getText());
					idArticuloSeleccionado.setText("");
					for (int i = 0; i <  tabla.getRowCount(); i++) {
						tabla.removeRow(i);
					}
					totalAPagar.setText(calculaTotalAPagar());
				} else {
					JOptionPane.showMessageDialog(this, "No hay suficientes Articulos "+listaInsuficientes);
				}
			}
		} else {
			JOptionPane.showMessageDialog(this, "Debes agregar almenos un articulo!");
		}
		listaDeIds = new ArrayList<Map<String,Integer>>();
    }                                              

    private void calculaTotalActionPerformed(java.awt.event.ActionEvent evt) {
		totalAPagar.setText(calculaTotalAPagar());
    }

    private void eliminaArticuloDeLista(java.awt.event.ActionEvent evt) {
		if(listaDeArticulos.getSelectedRow() > -1 ) {
			tabla.removeRow(listaDeArticulos.getSelectedRow());
		}
    }

    public void agregarArticuloALista(Object[] articuloVenta) {      
        tabla.addRow(articuloVenta);
	}
	
	private String calculaTotalAPagar() {
		float aPagar = 0f;
		for (int i = 0; i < tabla.getRowCount(); i++) {
			int cantidad = Integer.valueOf(tabla.getValueAt(i, 2).toString());
			float precio = Float.valueOf(tabla.getValueAt(i, 3).toString());
			aPagar += precio*cantidad;
			Map<String,Integer> elemento = new HashMap<String,Integer>();
			elemento.put(
				tabla.getValueAt(i, 0).toString(),
				Integer.valueOf(tabla.getValueAt(i, 2).toString())
			);
			listaDeIds.add(elemento);
		}
		return String.valueOf(aPagar);
	}

	public void abre () {
		setVisible(true);
	}
}
